{"version":3,"sources":["logo.png","components/unknown_patch.png","components/LaunchItem.jsx","components/MissonKey.jsx","components/Launches.jsx","components/Launch.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","imgsrc","launch","links","mission_patch_small","unknown_patch","LaunchItem","_ref","_ref$launch","flight_number","mission_name","launch_date_local","launch_date_utc","launch_success","react_default","a","createElement","className","src","alt","style","width","margin","classNames","text-success","text-danger","Date","getTime","text-warning","index_es","date","dist_default","format","Link","to","concat","MissonKey","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","Component","LAUNCHES_QUERY","gql","_templateObject","react","components_MissonKey","react_apollo_esm","query","loading","error","data","fetchMore","console","log","launchFeed","launches","map","onClick","variables","cursor","updateQuery","previousResult","_ref2","fetchMoreResult","newLaunches","toConsumableArray","__typename","LAUNCH_Query","Launch_templateObject","Launch","props","match","params","parseInt","_data$launch","launch_year","_data$launch$rocket","rocket","rocket_id","rocket_name","rocket_type","client","ApolloClient","uri","App","BrowserRouter","logo","display","Route","exact","path","component","Launches","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.62d7019a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.89f7aea1.png\";","module.exports = __webpack_public_path__ + \"static/media/unknown_patch.aa1119d9.png\";","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport Moment from \"react-moment\";\r\nimport { Link } from \"react-router-dom\";\r\nimport unknown_patch from \"./unknown_patch.png\";\r\nimport Countdown from \"react-countdown-now\";\r\n\r\nfunction imgsrc(launch) {\r\n    // console.log(launch.links.mission_patch_small)\r\n    if (launch.links.mission_patch_small == null) {\r\n        return unknown_patch;\r\n    } else {\r\n        return launch.links.mission_patch_small;\r\n    }\r\n}\r\n\r\nexport default function LaunchItem({\r\n    launch,\r\n    launch: {\r\n        flight_number,\r\n        mission_name,\r\n        launch_date_local,\r\n        launch_date_utc,\r\n        launch_success\r\n        // links:{mission_patch_small}\r\n    }\r\n}) {\r\n    // console.log(launch)\r\n    return (\r\n        <div className=\"card card-body mb-3\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-2\">\r\n                    <img\r\n                        src={imgsrc(launch)}\r\n                        alt=\"\"\r\n                        style={{ width: 150, margin: \"auto\" }}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-7\">\r\n                    <h4>Mission {flight_number}</h4>\r\n                    <h4\r\n                        className={classNames({\r\n                            \"text-success\": launch_success,\r\n                            \"text-danger\":\r\n                                !launch_success &&\r\n                                new Date(launch_date_utc).getTime() <=\r\n                                    new Date().getTime(),\r\n                            \"text-warning\":\r\n                                !launch_success &&\r\n                                new Date(launch_date_utc).getTime() >\r\n                                    new Date().getTime()\r\n                        })}\r\n                    >\r\n                        {mission_name}{\" \"}\r\n                        {new Date(launch_date_utc).getTime() >\r\n                        new Date().getTime() ? (\r\n                            <Countdown date={launch_date_utc} />\r\n                        ) : null}\r\n                    </h4>\r\n                    <p>\r\n                        Date:{\" \"}\r\n                        <Moment format=\"YYYY-MM-DD HH:mm\">\r\n                            {launch_date_local}\r\n                        </Moment>\r\n                    </p>\r\n                </div>\r\n\r\n                <div className=\"col-md-3\">\r\n                    <Link\r\n                        to={`/launch/${flight_number}`}\r\n                        className=\"btn btn-secondary\"\r\n                    >\r\n                        Launch Details\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport class MissonKey extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"my-3\">\r\n        <p>\r\n            <span className=\"px-3 mr-2 bg-success\"></span> = Success\r\n        </p>\r\n        <p>\r\n            <span className=\"px-3 mr-2 bg-danger\"></span> = Fail\r\n        </p>\r\n        <p>\r\n            <span className=\"px-3 mr-2 bg-warning\"></span> = Scheduled\r\n        </p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MissonKey\r\n","import React, { Component, Fragment } from \"react\";\r\nimport LaunchItem from \"./LaunchItem\";\r\nimport gql from \"graphql-tag\";\r\nimport { Query } from \"react-apollo\";\r\nimport MissionKey from \"./MissonKey\";\r\n\r\nconst LAUNCHES_QUERY = gql`\r\n    query MoreLaunchesQuery($cursor: Int) {\r\n        launchFeed(cursor: $cursor) {\r\n            cursor\r\n            launches {\r\n                flight_number\r\n                mission_name\r\n                launch_date_utc\r\n                launch_date_local\r\n                launch_success\r\n                links {\r\n                    mission_patch_small\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nexport class launch extends Component {\r\n    // loadMore() {\r\n    //     console.log(\"aaa\");\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <h1 className=\"display-4 my-3\">Launches</h1>\r\n                <MissionKey />\r\n                <Query query={LAUNCHES_QUERY}>\r\n\r\n                    {({ loading, error, data, fetchMore }) => {\r\n                        if (loading) return <h4>Loading...</h4>;\r\n                        if (error) console.log(error);\r\n                        return (\r\n                            <Fragment>\r\n                                {data.launchFeed.launches.map(launch => (\r\n                                    <LaunchItem\r\n                                        key={launch.flight_number}\r\n                                        launch={launch}\r\n                                    />\r\n                                ))}\r\n\r\n                                <button\r\n                                    onClick={() => {\r\n                                        fetchMore({\r\n                                            variables: {\r\n                                                cursor: data.launchFeed.cursor\r\n                                            },\r\n                                            updateQuery: (\r\n                                                previousResult,\r\n                                                { fetchMoreResult }\r\n                                            ) => {\r\n                                                // console.log(fetchMoreResult.launchFeed)\r\n                                                const newLaunches =\r\n                                                    fetchMoreResult.launchFeed\r\n                                                        .launches;\r\n                                                const newCursor =\r\n                                                    fetchMoreResult.launchFeed\r\n                                                        .cursor;\r\n\r\n                                                return {\r\n                                                    launchFeed: {\r\n                                                        cursor: newCursor,\r\n                                                        launches: [\r\n                                                            ...previousResult\r\n                                                                .launchFeed\r\n                                                                .launches,\r\n                                                            ...newLaunches\r\n                                                        ],\r\n                                                        __typename:\r\n                                                            previousResult.launchFeed.__typename\r\n                                                    }\r\n                                                };\r\n                                            }\r\n                                        });\r\n                                    }}\r\n                                    className=\"btn btn-secondary\"\r\n                                >\r\n                                    Load More\r\n                                </button>\r\n                            </Fragment>\r\n                        );\r\n                    }}\r\n                </Query>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default launch;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { Query } from \"react-apollo\";\r\nimport { Link } from \"react-router-dom\";\r\nimport className from \"classnames\";\r\n\r\nconst LAUNCH_Query = gql`\r\n    query LaunchQuery($flight_number: Int!) {\r\n        launch(flight_number: $flight_number) {\r\n            flight_number\r\n            mission_name\r\n            launch_year\r\n            launch_success\r\n            launch_date_local\r\n            rocket {\r\n                rocket_id\r\n                rocket_name\r\n                rocket_type\r\n            }\r\n        }\r\n    }\r\n`;\r\nexport class Launch extends Component {\r\n    render() {\r\n        let { flight_number } = this.props.match.params;\r\n        flight_number = parseInt(flight_number);\r\n        return (\r\n            <Fragment>\r\n                <Query query={LAUNCH_Query} variables={{ flight_number }}>\r\n                    {({ loading, error, data }) => {\r\n                        if (loading) return <h4>Loading</h4>;\r\n                        if (error) console.log(error);\r\n                        const {\r\n                            mission_name,\r\n                            flight_number,\r\n                            launch_year,\r\n                            launch_success,\r\n                            rocket: { rocket_id, rocket_name, rocket_type }\r\n                        } = data.launch;\r\n                        return (\r\n                            <div>\r\n                                <h1 className=\"display-4 my-3\">\r\n                                    <span className=\"text-dark\">Mission:</span>\r\n                                    {mission_name}\r\n                                </h1>\r\n                                <h4 className=\"mb-3\">Launch Details</h4>\r\n                                <ul className=\"list-group\">\r\n                                    <li className=\"list-group-item\">\r\n                                        Flight Number: {flight_number}\r\n                                    </li>\r\n                                    <li className=\"list-group-item\">\r\n                                        Launch Year: {launch_year}\r\n                                    </li>\r\n                                    <li className=\"list-group-item\">\r\n                                        Launch Successful:\r\n                                        <span\r\n                                            className={className({\r\n                                                \"text-success\": launch_success,\r\n                                                \"text-danger\": !launch_success\r\n                                            })}\r\n                                        >\r\n                                            {launch_success ?  \" Yes\" :  \" No\"}\r\n                                        </span>\r\n                                    </li>\r\n                                </ul>\r\n\r\n                                <h4 className=\"my-3\">Rocket Details</h4>\r\n                                <ul className=\"list-group\">\r\n                                    <li className=\"list-group-item\">\r\n                                        Rocket ID: {rocket_id}\r\n                                    </li>\r\n                                    <li className=\"list-group-item\">\r\n                                        Rocket Name: {rocket_name}\r\n                                    </li>\r\n                                    <li className=\"list-group-item\">\r\n                                        Rocket Type: {rocket_type}\r\n                                    </li>\r\n                                </ul>\r\n                                <hr/>\r\n                                <Link to = \"/\" className=\"btn btn-secondary\">Back</Link>\r\n                            </div>\r\n                        );\r\n                    }}\r\n                </Query>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Launch;\r\n","import React, { Component } from \"react\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\n// import \"./App.css\";\nimport logo from \"./logo.png\";\nimport Launches from \"./components/Launches\";\nimport Launch from \"./components/Launch\";\n\nconst client = new ApolloClient({\n    uri: \"/graphql\"\n});\nclass App extends Component {\n    render() {\n        return (\n            <ApolloProvider client={client}>\n                <Router>\n                    <div className=\"container\">\n                        <img\n                            src={logo}\n                            alt=\"SpaceX\"\n                            style={{\n                                width: 500,\n                                display: \"block\",\n                                margin: \"auto\"\n                            }}\n                        />\n                        <Route exact path=\"/\" component={Launches}></Route>\n                        <Route exact path=\"/launch/:flight_number\" component={Launch}></Route>\n                    </div>\n                </Router>\n            </ApolloProvider>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}